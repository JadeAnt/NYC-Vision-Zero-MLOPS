apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: promote-model
spec:
  entrypoint: promote-flow
  arguments:
    parameters:
    - name: source-environment
    - name: target-environment
    - name: model-version

  templates:
  - name: promote-flow
    steps:
      - - name: retag-image
          template: skopeo-retag
          arguments:
            parameters:
            - name: source-environment
              value: "{{workflow.parameters.source-environment}}"
            - name: target-environment
              value: "{{workflow.parameters.target-environment}}"
            - name: model-version
              value: "{{workflow.parameters.model-version}}"
      - - name: deploy
          template: trigger-deploy
          arguments:
            parameters:
            - name: environment
              value: "{{workflow.parameters.target-environment}}"
            - name: model-version
              value: "{{workflow.parameters.model-version}}"
      - - name: update-mlflow-alias
          template: set-mlflow-alias
          arguments:
            parameters:
            - name: model-version
              value: "{{workflow.parameters.model-version}}"
            - name: alias
              value: "{{workflow.parameters.target-environment}}"

      - - name: bring-up-edge-pi
          when: "{{workflow.parameters.source-environment}} == dev && {{workflow.parameters.target-environment}} == staging"
          template: bring-up-edge-pi
          arguments:
            parameters:
            - name: device-name
              value: nyu-rpi5-01
            - name: lease-hours
              value: "2"
              
      - - name: start-fastapi-container
          when: "{{workflow.parameters.source-environment}} == dev && {{workflow.parameters.target-environment}} == staging"
          template: start-fastapi-container
          arguments:
            parameters:
            - name: device-name
              value: nyu-rpi5-01

  - name: skopeo-retag
    inputs:
      parameters:
      - name: source-environment
      - name: target-environment
      - name: model-version
    container:
      image: quay.io/skopeo/stable
      command: [sh, -c]
      args:
        - |
          skopeo copy \
            --src-tls-verify=false \
            --dest-tls-verify=false \
            docker://registry.kube-system.svc.cluster.local:5000/nyc-vision-zero-app:{{inputs.parameters.source-environment}}-1.0.{{inputs.parameters.model-version}} \
            docker://registry.kube-system.svc.cluster.local:5000/nyc-vision-zero-app:{{inputs.parameters.target-environment}}-1.0.{{inputs.parameters.model-version}}

  - name: set-mlflow-alias
    inputs:
      parameters:
      - name: model-version
      - name: alias
    script:                                                                                            # under source -> changed name=GourmetGramFood11Model to name=CrashModel
      image: python:3.11-slim
      command: [sh, -c]
      source: |
        pip install mlflow-skinny > /dev/null
        export MLFLOW_TRACKING_URI=http://mlflow.gourmetgram-platform.svc.cluster.local:8000
        python -c "import mlflow; client = mlflow.tracking.MlflowClient(); client.set_registered_model_alias(name='CrashModel', alias='{{inputs.parameters.alias}}', version='{{inputs.parameters.model-version}}')"
     
  - name: bring-up-edge-pi
    inputs:
      parameters:
        - name: device-name
        - name: lease-hours
    metadata:
      annotations:
        workflows.argoproj.io/kube-context: chi@edge
    script:
      image: python:3.11-slim
      command: [sh, -eux, -c]
    env:
      - name: LEASE_NAME
        value: "serve-edge-project1"
      - name: DEVICE_MODEL
        value: "raspberrypi5"
      - name: DEVICE_NAME
        value: "{{inputs.parameters.device-name}}"
      - name: LEASE_HOURS
        value: "{{inputs.parameters.lease-hours}}"
    source: |
      python3 - << 'PYCODE'
      import os, sys
      from datetime import timedelta
      from chi import context, lease
      from chi.exceptions import LeaseNotFoundError
      
      # Bootstrap Chi
      context.version = "1.0"
      context.choose_project()
      context.choose_site(default="CHI@Edge")
      
      # Read parameters
      name  = os.getenv("LEASE_NAME")
      dname = os.getenv("DEVICE_NAME")
      model = os.getenv("DEVICE_MODEL")
      hours = int(os.getenv("LEASE_HOURS"))
      duration = timedelta(hours=hours)

      # Check for existing lease
      try:
        existing = lease.get_lease(name)
        print(f"Lease '{name}' already exists (status={existing.status}). Skipping.")
        sys.exit(0)
      except LeaseNotFoundError:
        print(f"No lease named '{name}'â€”provisiong a new one...")

      # Create & submit
      l = lease.Lease(name=name, duration=duration)
      l.add_device_reservation(amount=1, device_model=model, device_name=dname)
      l.submit(wait_for_active=True, wait_timeout=300, idempotent=True)
      print(f"Lease '{name}' is now active: {l.status}")
      PYCODE

  - name: start-fastapi-container
    inputs:
      paramters:
        - name: device-name
    metadata:
      annotations:
        workflows.argoproj.io/kube-context: chi@edge
    script:
      image: python:3.11-slim
      command: [sh, -eux, -c]
      env:
        - name: DEVICE_NAME
          value: "{{ inputs.parameters.device-name}}"
        - name: LEASE_NAME
          value: "serve-edge-project1"
      source: |
        python3 - << 'PYCODE'
        import os
        from chi import context, lease, container

        context.version = "1.0"
        context.choose_project()
        context.choose_site(default="CHI@Edge")

        lease_name = os.getenv("LEASE_NAME")
        device_name = os.getenv("DEVICE_NAME")

        l = lease.get_lease(lease_name)

        c = container.Container(
          name=f"node-{lease_name}".replace('_', '-'),
          reservation_id=l.device_reservations[0]["id"],
          image_ref="tiangolo/uvicorn-gunicorn-fastapi:python3.9",
          exposed_ports=[8000],
        )

        c.submit(idempotent=True)
        c.associate_floating_ip()

        c.execute("git clone https://github.com/JadeAnt/NYC-Vision-Zero-MLOPS.git")
        c.execute("mv NYC-Vision-Zero-MLOPS/fastapi work/")
        PYCODE
  
  - name: trigger-deploy
    inputs:
      parameters:
      - name: model-version
      - name: environment
    resource:
      action: create
      manifest: |
        apiVersion: argoproj.io/v1alpha1
        kind: Workflow
        metadata:
          generateName: deploy-container-image-
        spec:
          workflowTemplateRef:
            name: deploy-container-image
          arguments:
            parameters:
            - name: environment
              value: "{{inputs.parameters.environment}}"
            - name: model-version
              value: "{{inputs.parameters.model-version}}"
